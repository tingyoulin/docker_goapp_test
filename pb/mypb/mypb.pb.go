// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: mypb.proto

package mypb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PingRequest
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mypb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mypb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_mypb_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// PingReply 會回傳給客戶端。
type PingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mypb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_mypb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_mypb_proto_rawDescGZIP(), []int{1}
}

func (x *PingReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetVisitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVisitsRequest) Reset() {
	*x = GetVisitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mypb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisitsRequest) ProtoMessage() {}

func (x *GetVisitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mypb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisitsRequest.ProtoReflect.Descriptor instead.
func (*GetVisitsRequest) Descriptor() ([]byte, []int) {
	return file_mypb_proto_rawDescGZIP(), []int{2}
}

func (x *GetVisitsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetVisitsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visits int32 `protobuf:"varint,1,opt,name=visits,proto3" json:"visits,omitempty"`
}

func (x *GetVisitsReply) Reset() {
	*x = GetVisitsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mypb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisitsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisitsReply) ProtoMessage() {}

func (x *GetVisitsReply) ProtoReflect() protoreflect.Message {
	mi := &file_mypb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisitsReply.ProtoReflect.Descriptor instead.
func (*GetVisitsReply) Descriptor() ([]byte, []int) {
	return file_mypb_proto_rawDescGZIP(), []int{3}
}

func (x *GetVisitsReply) GetVisits() int32 {
	if x != nil {
		return x.Visits
	}
	return 0
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mypb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mypb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_mypb_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteReply) Reset() {
	*x = DeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mypb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReply) ProtoMessage() {}

func (x *DeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_mypb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReply.ProtoReflect.Descriptor instead.
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return file_mypb_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_mypb_proto protoreflect.FileDescriptor

var file_mypb_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x79, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x79,
	0x70, 0x62, 0x22, 0x21, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x22, 0x23, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xd8, 0x01, 0x0a, 0x08, 0x47, 0x72, 0x70,
	0x63, 0x54, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x11, 0x2e,
	0x6d, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0f, 0x2e, 0x6d, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x05, 0x50, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x11, 0x2e, 0x6d,
	0x79, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x6d, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x12,
	0x16, 0x2e, 0x6d, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x79, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x32, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x79, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x6d, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x3b, 0x6d, 0x79, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mypb_proto_rawDescOnce sync.Once
	file_mypb_proto_rawDescData = file_mypb_proto_rawDesc
)

func file_mypb_proto_rawDescGZIP() []byte {
	file_mypb_proto_rawDescOnce.Do(func() {
		file_mypb_proto_rawDescData = protoimpl.X.CompressGZIP(file_mypb_proto_rawDescData)
	})
	return file_mypb_proto_rawDescData
}

var file_mypb_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mypb_proto_goTypes = []interface{}{
	(*PingRequest)(nil),      // 0: mypb.PingRequest
	(*PingReply)(nil),        // 1: mypb.PingReply
	(*GetVisitsRequest)(nil), // 2: mypb.GetVisitsRequest
	(*GetVisitsReply)(nil),   // 3: mypb.GetVisitsReply
	(*DeleteRequest)(nil),    // 4: mypb.DeleteRequest
	(*DeleteReply)(nil),      // 5: mypb.DeleteReply
}
var file_mypb_proto_depIdxs = []int32{
	0, // 0: mypb.GrpcTest.Ping:input_type -> mypb.PingRequest
	0, // 1: mypb.GrpcTest.Ping1:input_type -> mypb.PingRequest
	2, // 2: mypb.GrpcTest.GetVisits:input_type -> mypb.GetVisitsRequest
	4, // 3: mypb.GrpcTest.Delete:input_type -> mypb.DeleteRequest
	1, // 4: mypb.GrpcTest.Ping:output_type -> mypb.PingReply
	1, // 5: mypb.GrpcTest.Ping1:output_type -> mypb.PingReply
	3, // 6: mypb.GrpcTest.GetVisits:output_type -> mypb.GetVisitsReply
	5, // 7: mypb.GrpcTest.Delete:output_type -> mypb.DeleteReply
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mypb_proto_init() }
func file_mypb_proto_init() {
	if File_mypb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mypb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mypb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mypb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mypb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisitsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mypb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mypb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mypb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mypb_proto_goTypes,
		DependencyIndexes: file_mypb_proto_depIdxs,
		MessageInfos:      file_mypb_proto_msgTypes,
	}.Build()
	File_mypb_proto = out.File
	file_mypb_proto_rawDesc = nil
	file_mypb_proto_goTypes = nil
	file_mypb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GrpcTestClient is the client API for GrpcTest service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcTestClient interface {
	// Ping, Ping1 會接收 PingRequest IP，最終會回傳 PingReply。
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	Ping1(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	GetVisits(ctx context.Context, in *GetVisitsRequest, opts ...grpc.CallOption) (*GetVisitsReply, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error)
}

type grpcTestClient struct {
	cc grpc.ClientConnInterface
}

func NewGrpcTestClient(cc grpc.ClientConnInterface) GrpcTestClient {
	return &grpcTestClient{cc}
}

func (c *grpcTestClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/mypb.GrpcTest/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcTestClient) Ping1(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/mypb.GrpcTest/Ping1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcTestClient) GetVisits(ctx context.Context, in *GetVisitsRequest, opts ...grpc.CallOption) (*GetVisitsReply, error) {
	out := new(GetVisitsReply)
	err := c.cc.Invoke(ctx, "/mypb.GrpcTest/GetVisits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcTestClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error) {
	out := new(DeleteReply)
	err := c.cc.Invoke(ctx, "/mypb.GrpcTest/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcTestServer is the server API for GrpcTest service.
type GrpcTestServer interface {
	// Ping, Ping1 會接收 PingRequest IP，最終會回傳 PingReply。
	Ping(context.Context, *PingRequest) (*PingReply, error)
	Ping1(context.Context, *PingRequest) (*PingReply, error)
	GetVisits(context.Context, *GetVisitsRequest) (*GetVisitsReply, error)
	Delete(context.Context, *DeleteRequest) (*DeleteReply, error)
}

// UnimplementedGrpcTestServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcTestServer struct {
}

func (*UnimplementedGrpcTestServer) Ping(context.Context, *PingRequest) (*PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedGrpcTestServer) Ping1(context.Context, *PingRequest) (*PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping1 not implemented")
}
func (*UnimplementedGrpcTestServer) GetVisits(context.Context, *GetVisitsRequest) (*GetVisitsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVisits not implemented")
}
func (*UnimplementedGrpcTestServer) Delete(context.Context, *DeleteRequest) (*DeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterGrpcTestServer(s *grpc.Server, srv GrpcTestServer) {
	s.RegisterService(&_GrpcTest_serviceDesc, srv)
}

func _GrpcTest_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcTestServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mypb.GrpcTest/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcTestServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcTest_Ping1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcTestServer).Ping1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mypb.GrpcTest/Ping1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcTestServer).Ping1(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcTest_GetVisits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVisitsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcTestServer).GetVisits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mypb.GrpcTest/GetVisits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcTestServer).GetVisits(ctx, req.(*GetVisitsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcTest_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcTestServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mypb.GrpcTest/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcTestServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcTest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mypb.GrpcTest",
	HandlerType: (*GrpcTestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _GrpcTest_Ping_Handler,
		},
		{
			MethodName: "Ping1",
			Handler:    _GrpcTest_Ping1_Handler,
		},
		{
			MethodName: "GetVisits",
			Handler:    _GrpcTest_GetVisits_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _GrpcTest_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mypb.proto",
}
